{
  "ts-node": {
    // these options are overrides used only by ts-node
    // same as the --compilerOptions flag and the TS_NODE_COMPILER_OPTIONS environment variable
    "compilerOptions": {
      "module": "commonjs"
    }
  },
  "compilerOptions": {
    "target": "ES2018" /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017','ES2018' or 'ESNEXT'. */,
		"module": "commonjs" /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', or 'ESNext'. */,
		"lib": ["es5", "es6", "dom"] /* Specify library files to be included in the compilation. */,
		"sourceMap": true /* Generates corresponding '.map' file. */,
		"outDir": "./dist" /* Redirect output structure to the directory. */,
		"strict": true /* Enable all strict type-checking options. */,
		"strictPropertyInitialization": false /* Enable strict checking of property initialization in classes. */,
		"moduleResolution": "node",
    "pretty": true,
    "baseUrl": "./",
    "preserveConstEnums": true,
    "allowJs": true,
    "paths": {
      "@components/*": ["app/components/*"],
      "@core/*": ["app/components/core/*"],
      "@auth/*": ["app/components/auth/*"],
      "@config/*": ["config/*"],
      "@database/*": ["database/*"],
      "@utilities/*": ["app/utilities/*"]
    },
    "esModuleInterop": true /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */,
		"experimentalDecorators": true /* Enables experimental support for ES7 decorators. */,
		"emitDecoratorMetadata": true /* Enables experimental support for emitting type metadata for decorators. */
  },
  "include": ["**/*.ts", "./custom.d.ts"],
  "exclude": ["node_modules"]
}
